#ifndef ROOT_H
#define ROOT_H

#include <ESP8266WebServer.h>

extern ESP8266WebServer server;

void handleRoot()
{
	String output = "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Document</title><style> * { box-sizing: border-box; padding: 0; margin: 0; } body { padding: 30px 100px; display: flex; flex-direction: column; align-items: center; justify-content: flex-start; gap: 40px; } h1 { width: 230px; height: 70px; display: flex; justify-content: center; align-items: center; background-color: #77c9ff; border-radius: 15px; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); } .time { width: 230px; height: 40px; padding: 5px; display: flex; justify-content: center; align-items: center; gap: 15px; background-color: #fff; border-radius: 15px; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); color: #2c3e50; font-size: 20px; font-weight: 600; text-align: center; } .hours, .mins, .secs { font-size: 30px; } .links { display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 10px; padding: 15px; width: 230px; background-color: #77c9ff; border-radius: 15px; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); } .nav { text-decoration: none; color: #2c3e50; font-size: 20px; width: 100%; height: 30px; border-radius: 15px; display: flex; justify-content: center; align-items: center; transition: 0.3s all; } .nav:hover { background-color: #fff; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); } .work { width: 230px; height: 30px; display: flex; justify-content: center; align-items: center; background-color: #fff; border-radius: 15px; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); color: #2c3e50; font-size: 20px; font-weight: 600; text-align: center; } .work { width: 230px; height: 30px; display: flex; justify-content: center; align-items: center; background-color: #fff; border-radius: 15px; box-shadow: 7px 6px 28px 1px rgba(0, 0, 0, 0.24); color: #2c3e50; font-size: 20px; font-weight: 600; text-align: center; } </style></head><body><h1>Main page</h1><div class='time'><div class='hours'>--</div>:<div class='mins'>--</div>:<div class='secs'>--</div></div><div class='work'>00:00 - 00:00</div><div class='links'><a href='/data' class='nav'>Data</a><a href='/manual' class='nav'>Manual</a><a href='/auto_mode' class='nav'>AutoMode</a><a href='/settings' class='nav'>Settings</a><a href='/new_ip' class='nav'>New IP</a></div><script> function toggleTime() { const time = new Date(); document.querySelector('.hours').innerText = time.getHours().toString().padStart(2, '0'); document.querySelector('.mins').innerText = time.getMinutes().toString().padStart(2, '0'); document.querySelector('.secs').innerText = time.getSeconds().toString().padStart(2, '0'); } function getInfo() { fetch('/getInfo') .then(response => response.json()) .then(data => { let work = data.work.split(':').map(num => num.padStart(2, '0')).join(':'); let rest = data.rest.split(':').map(num => num.padStart(2, '0')).join(':'); info.innerText = work + ' - ' + rest; console.log(work, rest); }); } const info = document.querySelector('.work'); function interval() { toggleTime(); getInfo(); } window.onload = interval(); setInterval(interval, 1000); </script></body></html>";
	server.send(200, "text/html", output);
}

#endif // ROOT_H